{"ast":null,"code":"import _slicedToArray from\"C:/Users/HP/Downloads/Compressed/TextUtils-React-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Navbar from'./components/Navbar';import TextForm from'./components/TextForm';import React,{useState}from'react';import Alert from'./components/Alert';import{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState('light'),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];// Whether dark mode is enabled or not\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1500);};var toggleMode=function toggleMode(){if(mode==='light'){setMode('dark');document.body.style.backgroundColor='#042743';showAlert(\"Dark mode has been enabled\",\"success\");}else{setMode('light');document.body.style.backgroundColor='white';showAlert(\"Light mode has been enabled\",\"success\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",mode:mode,toggleMode:toggleMode},new Date()),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\"}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Try TextUtils - word counter, character counter, remove extra spaces\",mode:mode})})]})})]})});}export default App;","map":{"version":3,"sources":["C:/Users/HP/Downloads/Compressed/TextUtils-React-master/src/App.js"],"names":["Navbar","TextForm","React","useState","Alert","BrowserRouter","Router","Switch","Route","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","Date"],"mappings":"8KACA,MAAOA,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,OACEC,aAAa,GAAIC,CAAAA,MADnB,CAEEC,MAFF,CAGEC,KAHF,KAIO,kBAJP,C,6IAOA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAwBN,QAAQ,CAAC,OAAD,CAAhC,wCAAOO,IAAP,eAAaC,OAAb,eAA2C;AAC3C,eAA0BR,QAAQ,CAAC,IAAD,CAAlC,yCAAOS,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,OAAD,CAAUC,IAAV,CAAiB,CAC/BH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OADE,CAEPC,IAAI,CAAEA,IAFC,CAAD,CAAR,CAIAE,UAAU,CAAC,UAAM,CACbL,QAAQ,CAAC,IAAD,CAAR,CACH,CAFS,CAEP,IAFO,CAAV,CAGH,CARD,CAUA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAI,CACrB,GAAGT,IAAI,GAAK,OAAZ,CAAoB,CAClBC,OAAO,CAAC,MAAD,CAAP,CACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAsC,SAAtC,CACAT,SAAS,CAAC,4BAAD,CAA+B,SAA/B,CAAT,CACD,CAJD,IAKI,CACFH,OAAO,CAAC,OAAD,CAAP,CACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAsC,OAAtC,CACAT,SAAS,CAAC,6BAAD,CAAgC,SAAhC,CAAT,CACD,CACF,CAXD,CAYA,mBACE,sCACA,MAAC,MAAD,yBACA,KAAC,MAAD,EAAQ,KAAK,CAAC,WAAd,CAA0B,IAAI,CAAEJ,IAAhC,CAAsC,UAAU,CAAES,UAAlD,EAAmE,GAAIK,CAAAA,IAAJ,EAAnE,CADA,cAEA,KAAC,KAAD,EAAO,KAAK,CAAEZ,KAAd,EAFA,cAGA,YAAK,SAAS,CAAC,gBAAf,uBACA,MAAC,MAAD,yBAGM,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,EAHN,cAMM,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,uBACE,KAAC,QAAD,EAAU,SAAS,CAAEE,SAArB,CAAgC,OAAO,CAAC,sEAAxC,CAA+G,IAAI,CAAEJ,IAArH,EADF,EANN,GADA,EAHA,GADA,EADF,CAoBD,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Switch>\n    {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          <Route exact path=\"/about\">\n           \n          </Route>\n          <Route exact path=\"/\">\n            <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n          </Route>\n    </Switch>\n    </div>\n    </Router>\n    </> \n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}